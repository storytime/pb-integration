buildscript {
    ext {
        // libs versions
        springBootVersion = '2.1.1.RELEASE'
        postgresqlVersion = '42.2.5'
        commonsVersion = '3.8.1'
        verbalRexExpVersion = '1.6'
        flywayVersion = '5.2.3'
        jUnitParamsVersion = '1.1.1'
        jfairyVersion = '0.5.9'
        httpApacheClientVersion = '4.5.6'
        logBookVersion = '1.11.1'
        jaxbImplVersion = '2.3.1'
        jaxbCoreVersion = '2.3.0.1'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "org.sonarqube" version "2.6.2"
    id 'com.adarshr.test-logger' version '1.5.0'
    id "org.hidetake.ssh" version "2.9.0" //ssh.gradle
    id 'net.nemerosa.versioning' version '2.8.2' // utils.gradle
}

apply from: 'gradle/ssh.gradle'
apply from: 'gradle/utils.gradle'
apply from: 'gradle/xjc.gradle'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

sourceCompatibility = '11'
archivesBaseName = 'pb-integration'

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.postgresql:postgresql:$postgresqlVersion")
    compile("org.zalando:logbook-spring-boot-starter:$logBookVersion")
    compile("org.apache.httpcomponents:httpclient:$httpApacheClientVersion")
    compile("org.apache.commons:commons-lang3:$commonsVersion")
    compile("ru.lanwen.verbalregex:java-verbal-expressions:$verbalRexExpVersion")
    compile("org.flywaydb:flyway-core:$flywayVersion")
    compile('io.micrometer:micrometer-registry-prometheus:latest.release')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile("com.sun.xml.bind:jaxb-impl:$jaxbImplVersion")
    compile("com.sun.xml.bind:jaxb-core:$jaxbCoreVersion")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("pl.pragmatists:JUnitParams:$jUnitParamsVersion")
    testCompile("io.codearte.jfairy:jfairy:$jfairyVersion")
}


test {
    maxHeapSize = '4G'
}

testlogger {
    theme 'standard' // pick a theme - mocha, standard or plain
    showExceptions true // set to false to disable detailed failure logs
    slowThreshold 3000 // set threshold in milliseconds to highlight slow tests
    showSummary true // displays a breakdown of passes, failures and skips along with total duration
}

subprojects {
    tasks.withType(Test) {
        maxParallelForks = Runtime.runtime.availableProcessors()
    }
}

// compileJava.dependsOn xsd2java

classes {
    dependsOn saveVersionToFile
}