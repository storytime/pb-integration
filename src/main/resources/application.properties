###### PROPS ARE TAKEN FROM AWS PARAM STORE #####
# first its trying to get it from AWS, if not exists, them from this comnf
spring.application.name=sync-app
spring.config.import=aws-parameterstore:
aws.region=${AWS_REGION}
aws.dynamodb.accessKey=${AWS_ACCESS_KEY_ID}
aws.dynamodb.secretKey=${AWS_SECRET_ACCESS_KEY}


#aws.dynamodb.endpoint=https://dynamodb.eu-west-1.amazonaws.com
#spring.output.ansi.enabled=always
#server.http2.enabled=true
#server.port=8080
#spring.banner.charset=UTF-8
#spring.banner.location=classpath:banner.txt
#spring.main.lazy-initialization=true
#spring.jmx.enabled=false
#spring.jackson.default-property-inclusion=non_null
#logbook.filter.enabled=true
#logbook.format.style=http
#logbook.exclude=/app/api/**, /actuator**
#logbook.write.category=http.wire-log
#
#
#iso=yyyy-MM-dd HH:mm:ss
#private.bank=dd.MM.yyyy
#zen=yyyy-MM-dd'T'HH:mm:ss
#
#
#
#pb.transactions.url=https://api.privatbank.ua/p24api/rest_fiz
#pb.account.url=https://api.privatbank.ua/p24api/balance
#zen.diff.url=https://api.zenmoney.ru/v8/diff/
#pb.cash.url=https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5
#pb.bank.signature.error=<data><error message ="invalid signature" /></data>
#async.executor.core.pool.size=${ASYNC_CORE_POOL_SIZE:10}
#async.executor.max.pool.size=${ASYNC_MAX_POOL_SIZE:50}
#async.executor.thread.prefix=async-
#scheduler.executor.thread.prefix=scheduler-
#scheduler.executor.core.pool.size=${SCHEDULER_CORE_POOL_SIZE:25}
#cf.executor.thread.prefix=cf-
#cf.executor.core.pool.size=${CF_CORE_POOL_SIZE:50}
#cf.executor.max.pool.size=${CF_CORE_POOL_SIZE:100}
#verbal.regexp.pb.comment.separator=:
#verbal.regexp.pb.cash.withdrawal=Снятие наличных
#verbal.regexp.pb.cash.withdrawal.new=Банкомат Отделение банка
#verbal.regexp.pb.transfer.internal.to=Перевод на свою карту
#verbal.regexp.pb.transfer.internal.to.new=На свою карту
#verbal.regexp.pb.transfer.internal.from=Перевод со своей карты
#verbal.regexp.pb.transfer.internal.from.new=Со своей карты
#verbal.regexp.pb.transfer.internal.from.special=Cо своей карты
#verbal.regexp.pb.transfer.terminal=PrivatBank
#verbal.regexp.pb.money.back=ВОЗВРАТ СРЕДСТВ
#verbal.regexp.pb.transfer.digit.separator=**
#
##  90 sec. Determines the timeout in milliseconds until a connection is established.
#http.connect.timeout.millis=90000
## 90 sec. The timeout when requesting a connection from the connection manager.
#http.connect.manager.timeout.millis=90000
#http.request.timeout.millis=600000
#http.request.keep.alive.millis=600000
#http.request.max.connections=1000
#
#sync.first.priority.period.millis=${FIRST_PRIO_SYNC:30000}
#sync.first.priority.period.millis.init.delay=50000
#cache.clean.currency.millis=300000
#cache.clean.zentags.millis=3600000
#
#
## 60 min
#filter.new.transactions.start.time.millis=${FILTER_NEW_TRANSACTIONS_START:3600000}
## 1 day must be bigger then filter.new.transactions.start.time.millis
#pushed.pb.zen.transaction.storage.clean.older.millis=86400000
#pb.invalid.signature.rollback.period.hours=${PB_ROLL_BACK_PERIOD:1}
## 2 weeks in ms
#pb.invalid.signature.max.rollback.period.ms=1209600000


###### AWS #####
#aws.dynamodb.endpoint=https://dynamodb.eu-west-1.amazonaws.com
#cloud.aws.region.static=${AWS_REGION}
#cloud.aws.credentials.access-key=${AWS_AK:xxx}
#cloud.aws.credentials.secret-key=${AWS_SC:xxx}
#cloud.aws.region.use-default-aws-region-chain=true
#cloud.aws.stack.auto=false
#cloud.aws.region.auto=false
#cloud.aws.stack=false
#cloud.aws.end-point.uri=${AWS_SQS_SHUTDOWN_QUEUE:https://sqs...}
#cloud.aws.credentials.instanceProfile= alse