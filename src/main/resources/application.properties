spring.application.name=pb-integration
spring.output.ansi.enabled=always
server.http2.enabled=true
server.port=8080
spring.banner.charset=UTF-8
spring.banner.location=classpath:banner.txt
###
#  Jackson
###
spring.jackson.default-property-inclusion=non_null
###
#   Flyway migration
###
spring.flyway.enabled=true
spring.flyway.encoding=UTF-8
###
#   Database Settings
###
spring.sql.init.platform=postgres
spring.jpa.show-sql=false
spring.datasource.url=${DB_LOCATION:jdbc:postgresql://pg/app-sync}
spring.datasource.username=${POSTGRES_USER:sa}
spring.datasource.password=${POSTGRES_PASSWORD:00HG2653mpO8NuPCUEpwIPMyQml3tKEo}
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# This property controls the maximum number of milliseconds that a client (that's you) will wait for a connection from the pool.
# If this time is exceeded without a connection becoming available, a SQLException will be thrown.
# Lowest acceptable connection timeout is 250 ms. Default: 30000 (30 seconds)
spring.datasource.hikari.connectionTimeout=20000
# This property controls the maximum lifetime of a connection in the pool
# An in-use connection will never be retired, only when it is closed will it then be removed.
# Default: 1800000 (30 minutes)
spring.datasource.hikari.maxLifetime=30000
# This property controls the minimum number of idle connections that HikariCP tries to maintain in the pool. Default: same as maximumPoolSize
spring.datasource.hikari.minimum-idle=10
# This property controls the maximum size that the pool is allowed to reach, including both idle and in-use connections.
# Basically this value will determine the maximum number of actual connections to the database backend.
spring.datasource.hikari.maximumPoolSize=25
# This property controls the maximum amount of time that a connection is allowed to sit idle in the pool.
# This setting only applies when minimumIdle is defined to be less than maximumPoolSize
# Default: 600000 (10 minutes)
spring.datasource.hikari.idle-timeout=10000

###
#   Hibernate Settings
###
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.open-in-view=false
spring.data.jpa.repositories.bootstrap-mode=deferred
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
###
#   Metrics Settings
###
management.endpoints.web.exposure.include=*
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.sla.http.server.requests=50ms
###
#   Logbook Settings
###
logbook.filter.enabled=true
logbook.format.style=http
logbook.exclude=/app/api/**, /actuator**
logbook.write.category=http.wire-log

## replace below url with your aws region (aws-region)
## https://dynamodb.aws-region.amazonaws.com
aws.dynamodb.endpoint=https://dynamodb.eu-west-1.amazonaws.com

## your aws region
aws.region=eu-west-1

## aws generate aws access key after creating user
aws.dynamodb.accessKey=AKIA2TTERAMO7ZMYZBEK

## aws generate aws secret key after creating user
aws.dynamodb.secretKey=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
